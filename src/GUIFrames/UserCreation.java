/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUIFrames;

import Classes.Employee;
import Classes.Cnction;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.apache.commons.codec.digest.DigestUtils;

/**
 *
 * @author Janith
 */
public class UserCreation extends javax.swing.JFrame {

    List<Employee> empList;

    /**
     * Creates new form UserCreation
     */
    public UserCreation() {
        this.empList = new ArrayList<>();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblSelectDept = new javax.swing.JLabel();
        lblSelectEmp = new javax.swing.JLabel();
        lblUName = new javax.swing.JLabel();
        lblPw = new javax.swing.JLabel();
        lblCpw = new javax.swing.JLabel();
        lblCat = new javax.swing.JLabel();
        rdoIt = new javax.swing.JRadioButton();
        rdoHr = new javax.swing.JRadioButton();
        cmbEmpName = new javax.swing.JComboBox<>();
        btnGetEmp = new javax.swing.JButton();
        txtUName = new javax.swing.JTextField();
        txtCpw = new javax.swing.JPasswordField();
        txtPw = new javax.swing.JPasswordField();
        cmbRole = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        chkShwPw = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "Add User", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 24))); // NOI18N

        lblSelectDept.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSelectDept.setText("Select Department");

        lblSelectEmp.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSelectEmp.setText("Select Employee");

        lblUName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblUName.setText("UserName");

        lblPw.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPw.setText("Password");

        lblCpw.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCpw.setText("Confirm Password");

        lblCat.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCat.setText("Role");

        buttonGroup1.add(rdoIt);
        rdoIt.setText("IT");
        rdoIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoItActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoHr);
        rdoHr.setText("HR");

        cmbEmpName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));

        btnGetEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Load.jpg"))); // NOI18N
        btnGetEmp.setText("Get Employees");
        btnGetEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetEmpActionPerformed(evt);
            }
        });

        txtPw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPwActionPerformed(evt);
            }
        });

        cmbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Save Icon.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Back Icon.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        chkShwPw.setText("Show Password");
        chkShwPw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkShwPwActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSelectDept)
                    .addComponent(lblCpw)
                    .addComponent(lblPw)
                    .addComponent(lblUName)
                    .addComponent(lblSelectEmp)
                    .addComponent(lblCat, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(rdoIt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rdoHr, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbRole, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPw, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCpw, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkShwPw, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGetEmp))
                        .addGap(23, 23, 23))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectDept, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoIt)
                    .addComponent(rdoHr))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbEmpName)
                        .addComponent(btnGetEmp))
                    .addComponent(lblSelectEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPw, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCpw, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCpw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkShwPw))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCat, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addComponent(btnSave))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rdoItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoItActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoItActionPerformed

    private void txtPwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPwActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPwActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String p1 = txtPw.getText();
        String p2 = txtCpw.getText();
        if (txtUName.getText().equals("") || txtPw.getText().equals("") || txtCpw.getText().equals("") || cmbRole.getSelectedItem().equals("Select")) {
            JOptionPane.showMessageDialog(rootPane, "Fields must not be empty!", "Error", 1);
        } else {
            btnSave.setEnabled(true);
            if (p1.equals(p2)) {

                try {
                    Connection con = Cnction.getConnection(); // database connection Abstraction
                    PreparedStatement pst = (PreparedStatement) con.prepareStatement("INSERT INTO users (userName, password, role, empId) VALUES (?, ?, ?, ?)");

                    pst.setString(1, txtUName.getText());
                    pst.setString(2, DigestUtils.sha256Hex(txtPw.getText()));//use sha256 to hash password
                    String role = cmbRole.getSelectedItem().toString();
                    pst.setString(3, role);

                    // Get the selected employee name
                    String selectedEmpName = cmbEmpName.getSelectedItem().toString();

                    // Query to get empId based on the selected employee name
                    String query = "SELECT id FROM employees WHERE fName = ?";
                    try (PreparedStatement empIdStatement = (PreparedStatement) con.prepareStatement(query)) {
                        empIdStatement.setString(1, selectedEmpName);
                        ResultSet resultSet = empIdStatement.executeQuery();

                        // Check if a result is found
                        if (resultSet.next()) {
                            int selectedempId = resultSet.getInt("id");

                            // Check if the selectedempId already exists in the users table
                            String checkUserQuery = "SELECT COUNT(*) FROM users WHERE empId = ?";
                            try (PreparedStatement checkUserStatement = (PreparedStatement) con.prepareStatement(checkUserQuery)) {
                                checkUserStatement.setInt(1, selectedempId);
                                ResultSet countResult = checkUserStatement.executeQuery();
                                if (countResult.next()) {
                                    int count = countResult.getInt(1);
                                    if (count > 0) {
                                        // User with the selectedempId already exists
                                        JOptionPane.showMessageDialog(null, "Error: User already exists for the selected employee.");
                                    } else {
                                        // Set the foreign key in your PreparedStatement
                                        pst.setInt(4, selectedempId);

                                        // Execute the update query
                                        pst.executeUpdate();

                                        // Show success message
                                        JOptionPane.showMessageDialog(null, "User Created Successfully!");
                                        UserCreation uc = new UserCreation();
                                        this.dispose();
                                        uc.setVisible(true);
                                    }
                                }
                            } catch (SQLException ex) {
                                // Handle SQL exception when checking for existing user
                                JOptionPane.showMessageDialog(null, ex);
                            }
                        } else {
                            // Handle the situation where the selected employee is not found
                            JOptionPane.showConfirmDialog(null, "Error: Selected employee not found.");
                        }
                    } catch (SQLException ex) {
                        // Handle SQL exception
                        JOptionPane.showMessageDialog(null, ex);
                    } finally {
                        try {
                            // Close the connection in a finally block
                            con.close();
                        } catch (SQLException ex) {
                            // Handle SQL exception when closing the connection
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    }
                } catch (HeadlessException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Password Does not Match!");
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnGetEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetEmpActionPerformed
        int itemCount = cmbEmpName.getItemCount();
        for (int i = 1; i < itemCount; i++) {
            cmbEmpName.removeItemAt(1);
        }
        int itemCount1 = cmbRole.getItemCount();
        for (int i1 = 1; i1 < itemCount1; i1++) {
            cmbRole.removeItemAt(1);

        }
        if (rdoIt.isSelected()) {
            cmbRole.addItem("Admin");
            try {
                try (Connection con = Cnction.getConnection()) {
                    Statement stm = (Statement) con.createStatement();
                    ResultSet rs = stm.executeQuery("Select fName from employees where depId = 1");
                    while (rs.next()) {

                        String fName = rs.getString("fname");
                        cmbEmpName.addItem(fName);
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        if (rdoHr.isSelected()) {
            cmbRole.addItem("HR Manager");
            cmbRole.addItem("HR Assistant");
            try {
                Connection con = Cnction.getConnection();
                Statement stm = (Statement) con.createStatement();
                ResultSet rs = stm.executeQuery("Select fName from employees where depId = 2");
                while (rs.next()) {

                    String fName = rs.getString("fname");
                    cmbEmpName.addItem(fName);
                }
                con.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }

        }
    }//GEN-LAST:event_btnGetEmpActionPerformed

    private void chkShwPwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkShwPwActionPerformed
        if (chkShwPw.isSelected()) {
            txtPw.setEchoChar((char) 0);
            txtCpw.setEchoChar((char) 0);
        } else {
            txtPw.setEchoChar('*');
            txtCpw.setEchoChar('*');
        }
    }//GEN-LAST:event_chkShwPwActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        AdminFrame af = new AdminFrame();
        af.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserCreation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGetEmp;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkShwPw;
    private javax.swing.JComboBox<String> cmbEmpName;
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCat;
    private javax.swing.JLabel lblCpw;
    private javax.swing.JLabel lblPw;
    private javax.swing.JLabel lblSelectDept;
    private javax.swing.JLabel lblSelectEmp;
    private javax.swing.JLabel lblUName;
    private javax.swing.JRadioButton rdoHr;
    private javax.swing.JRadioButton rdoIt;
    private javax.swing.JPasswordField txtCpw;
    private javax.swing.JPasswordField txtPw;
    private javax.swing.JTextField txtUName;
    // End of variables declaration//GEN-END:variables
}
